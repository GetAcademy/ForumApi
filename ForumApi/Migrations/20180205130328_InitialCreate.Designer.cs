// <auto-generated />
using ForumApi.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ForumApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180205130328_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ForumApi.Models.Answer", b =>
                {
                    b.Property<int>("CategoryId");

                    b.Property<int>("PostId");

                    b.Property<int>("AnswerId");

                    b.Property<string>("AnswerContent");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<int>("Votes");

                    b.HasKey("CategoryId", "PostId", "AnswerId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("ForumApi.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ForumApi.Models.Post", b =>
                {
                    b.Property<int>("CategoryId");

                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<string>("PostContent");

                    b.Property<string>("PostTitle");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedOn");

                    b.Property<int>("Votes");

                    b.HasKey("CategoryId", "PostId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("ForumApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserName");

                    b.Property<string>("UserRole");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ForumApi.Models.Vote", b =>
                {
                    b.Property<int>("CategoryId");

                    b.Property<int>("PostId");

                    b.Property<int>("AnswerId");

                    b.Property<int>("VoteId");

                    b.Property<int>("VoteCount");

                    b.Property<int>("VotedBy");

                    b.HasKey("CategoryId", "PostId", "AnswerId", "VoteId");

                    b.ToTable("Vote");
                });
#pragma warning restore 612, 618
        }
    }
}
